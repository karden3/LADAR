%   Данная программа предназначена
%   для оценки работы алгоритмов
%   MBIR, L1 reg, L2 reg, MNK without reg
%
%   Тестируются: скорость работы и
%   качество восстановления для 
%   различных размерностей

N = 10:10:100;...массив размерностей сеток
[~, K] = size(N);...количество таких сеток
SNR = 2;....фиксируем одинаковый шум

%   L1, L2 - массивы соответствующих параметров
%   регуляризации
%   mod_# - соответствующие модельные данные
%   (импортируются из соответствующего Testing_MBIR.mat файла)

%   В данном блоке протестируем скорость работы от размерности
%   time_A - время на моделирование операторов данных и итерацию
%   time_B - время затраченное на 1 итерацию
%   1-ая строка L1, 2-ая строка L2, 3-яя MBIR

time_A = zeros(3, K); time_B = time_A;...инициализируем массивы

for k = 1:K
    %   Начинаем с L1
    t_A = tic;
    D = generation_D(N(k), N(k), N(k), N(k));...задаём оператор
    load(sprintf('mod_%d', k));...загружаем новый модельный объект
    arr_g = to_array(g);
    w = generation_w(D, g, SNR);...моделируем шум
    y = D * arr_g + w;...моделируем сигнал
    t_B = tic;
    %   Запускаем одну иттерацию градиентного спуска
    grad_reg_fun_of_lim_var(D, D' * D, y, 1, L1(k), 0.1, N(k), N(k));
    time_A(1, k) = toc(t_A); time_B(1, k) = toc(t_B);
    
    %   Аналогично с L2
    t_A = tic;
    D = generation_D(N(k), N(k), N(k), N(k));...задаём оператор
    load(sprintf('mod_%d', k));...загружаем новый модельный объект
    arr_g = to_array(g);
    w = generation_w(D, g, SNR);...моделируем шум
    y = D * arr_g + w;...моделируем сигнал
    t_B = tic;
    %   Запускаем одну иттерацию градиентного спуска
    grad_solution_N(D, y, zeros(size(y)), 1, L2(k));
    time_A(2, k) = toc(t_A); time_B(2, k) = toc(t_B);
    
    %   Теперь реализуем одну EM-итерацию
    t_A = tic;
    D = generation_D(N(k), N(k), N(k), N(k));...задаём оператор
    load(sprintf('mod_%d', k));...загружаем новый модельный объект
    arr_g = to_array(g);
    w = generation_w(D, g, SNR);...моделируем шум
    y = D * arr_g + w;...моделируем сигнал
    t_B = tic;
    %   Запускаем одну EM-иттерацию
    MBIR(y, 2, 2, 1.1, 0.05, fspecial('gaussian', 3, 0.1), 1, 0, N(k) * N(k), D, D, 1e-4);
    time_A(3, k) = toc(t_A); time_B(3, k) = toc(t_B);
end