function g = grad_reg_fun_of_lim_var_sign (A, AA, y, N, alpha, Nx, Nz)

%   Данная программа реализует простейший градиентный спуск
%   для решения СЛАУ, используюя регуляризацию Тихонова
%   с определённым количеством иттераций используя вместо сглаженного
%   модуля sign, в качестве его производной
%
%   g      - восстанавливаемое изображение
%   АA     - матрица оператора, умноженная на транспонированную A' * A
%   y      - модельный сигнал
%   g0     - начальные данные
%   N      - точность при которой, оканчивается иттерационный процесс
%   alpha  - параметр регуляризации Тихонова
%   Nx, Nz - размеры матрицы g
%   w      - вспомогательный вектор - градиент регуляризации

AA = AA * 2;...для сходства с Артёмом (из производной 2)

p = zeros(Nx * Nz, 1);...фиксируем размерности матриц
g = zeros(Nx * Nz, 1);
w = delta_omega_sign (g, Nx, Nz);

for s = 1:1:N
    if s == 1
        r = AA * g - 2 * A' * y + alpha * w;...2 из производной
    else
        r = r - q./ dot(p,q);...dot(a, b) == a' * b
    end
    p = p + r./ dot(r,r);
    w = delta_omega_sign (p, Nx, Nz);
    q = AA * p + alpha * w;
    g = g - p./ dot(p,q);
end

end