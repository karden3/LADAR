function w = delta_omega_sign (X, Nx, Nz)

%   Данная программа находит (i, j)
%   компонента вариации регулязирующего функционала
%   для класса функций с ограниченной вариацией
%   используя sign в качестве производной модуля
%
%   Единственное отличие от программы delta_omega в том,
%   что теперь используем не сглаженный модуль а обычный,
%   полагая, что (abs x)' = sign x
%
%   X      - аргумент функционала - вектор-столбец
%   Nx, Nz - размерность пространства
%   i, j   - компоненты вектора вариации

w = zeros (Nx * Nz, 1);...искомый градиент

X1 = to_Matrix(X, Nx, Nz);...чтобы корректно передать аргумент в функцию ниже
omega1 = help_omega_sign(X1, Nx, Nz);...реализуем вспомогательную матрицу

omega = zeros(Nx + 1, Nz + 1);
%   хотим занулить 1 и Nx строку и 1 и Nz столбец, 
%   чтобы компилятор не ругался на их вызов

for i = 1:(Nx - 1)
    for j = 1:(Nz - 1)
        omega(i + 1, j + 1) = omega1(i, j);
        %переносим вспомогательную матрицу в матрицу побольше
    end
end

for i = 1:Nx
    for j = 1:Nz
        %   индексы сдвинуты, чтобы сохранить выражение
        %   в том же виде, но без символов Кронекера
        
        a = omega(i, j + 1) - omega(i, j);...вспомогательный второй член
        w ((i - 1) * Nx + j, 1) = - a + omega(i + 1 , j + 1) - omega(i + 1, j);
    end
end


end